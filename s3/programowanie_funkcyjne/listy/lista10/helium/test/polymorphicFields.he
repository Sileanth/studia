
data Cont X =
  { run : type A R. (X ->[|R] A) ->[|R] A }

let run c cont = c.run cont

let unit x =
  { run = fn cont => cont x }

let map (f : _ -> _) { run = run } =
  let run cont = run (fn x => cont (f x)) in
  { run = run }

let bind (f : _ -> _) m =
  { run = fn cont =>
    m.run (fn x =>
    (f x).run cont)
  }
