data rec List A = Nil | Cons of A, List A
data Option A = None | Some of A

let values l =
  effect Stop X = { stop : Unit => X } in
  let rec loop xs =
    match xs with
    | Nil              => Nil
    | Cons None     _  => stop ()
    | Cons (Some x) xs => Cons x (loop xs)
    end in
  handle loop l with
  | stop ()  => None
  | return l => Some l
  end
