data ExInt =
| Pack of type T. T, (T -> Int)

data IntPair = IntPair of Int, Int

let print_ex = fn (Pack x f) => printInt (f x)
let fst = fn (IntPair x _) => x
let snd = fn (IntPair _ x) => x

let _ = print_ex (Pack 42 (fn x => x))
let _ = print_ex (Pack (IntPair 13 21) fst)
let _ = print_ex (Pack (IntPair 666 69) snd)
