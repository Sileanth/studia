let run_both (type X Y E) (f1 : Unit ->[X|E] Unit) (f2 : Unit ->[Y|E] Unit) =
  let _ = f1 () : Unit / [X,Y|E] in
  f2 ()

effect State X =
  { put : X    => Unit
  ; get : Unit => X
  }

let handle_state f s =
  handle f () with
  | return x => fn _ => x
  | put s    => fn _ => resume () s
  | get ()   => fn s => resume s s
  end s

let handle_int_state f = handle_state f 0

let _ =
  handle_int_state (fn () =>
  handle_int_state (fn () =>
    let _ = run_both
      (fn () => put 42)
      (fn () => put 69)
    in run_both
      (fn () => printInt (get ()))
      (fn () => printInt (get ()))))
