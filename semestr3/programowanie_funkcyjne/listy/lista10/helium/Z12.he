effect ST X =
{ 
    get : Unit => X
    ; put : X => Unit
}

data rec FreeST X E A =
| Return of A
| Get of (X ->[E] FreeST X E A)
| Put of X, (Unit ->[E] FreeST X E A)



let hFreeST f =
    handle f () with
    | return a => Return a 
    | get ()   => Get resume
    | put x    => Put x resume
    end

let rec runFreeST fst = 
    match fst with
    | Return a => a 
    | Put x f  => put x; runFreeST (f ())
    | Get f    => runFreeST (f (get ()))
    end