
helloworld.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000e8  0000015c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000012  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY, OCTETS
  4 .debug_aranges 00000020  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   0000076b  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 000006b3  00000000  00000000  0000093b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000001cc  00000000  00000000  00000fee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_frame  00000024  00000000  00000000  000011bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    000002f9  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00000072  00000000  00000000  000014d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loclists 00000086  00000000  00000000  0000154b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000013  00000000  00000000  000015d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 72 00 	jmp	0xe4	; 0xe4 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define LED_DDR DDRD
#define LED_PORT PORTD
#define DELAY_TIME 85

int main() {
  UCSR0B &= ~_BV(RXEN0) & ~_BV(TXEN0);
  80:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  84:	87 7e       	andi	r24, 0xE7	; 231
  86:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

0000008a <.Loc.3>:
  


  LED_DDR |= 0xFF;
  8a:	8a b1       	in	r24, 0x0a	; 10

0000008c <.Loc.4>:
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	8a b9       	out	0x0a, r24	; 10

00000090 <.Loc.5>:
  LED_PORT = 1;
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	8b b9       	out	0x0b, r24	; 11

00000094 <.LVL0>:
  int left = 1;
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	11 c0       	rjmp	.+34     	; 0xbc <.L2>

0000009a <.L12>:
  while (1) {
    if(left) {
      LED_PORT <<= 1;
  9a:	22 0f       	add	r18, r18
  9c:	2b b9       	out	0x0b, r18	; 11

0000009e <.LBB6>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(__builtin_ceil(__builtin_fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	2f e7       	ldi	r18, 0x7F	; 127
  a0:	36 e2       	ldi	r19, 0x26	; 38
  a2:	44 e0       	ldi	r20, 0x04	; 4

000000a4 <.L1^B1>:
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	30 40       	sbci	r19, 0x00	; 0
  a8:	40 40       	sbci	r20, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.L1^B1>
  ac:	00 c0       	rjmp	.+0      	; 0xae <L0^A>

000000ae <L0^A>:
	...

000000b0 <.LBE6>:
      _delay_ms(DELAY_TIME);
      if(LED_PORT == (1 << 7)) {
  b0:	3b b1       	in	r19, 0x0b	; 11

000000b2 <.Loc.22>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 38       	cpi	r19, 0x80	; 128
  b6:	a1 f0       	breq	.+40     	; 0xe0 <.L10>

000000b8 <.L6>:
      }
    }
    else {
      LED_PORT >>= 1;
      _delay_ms(DELAY_TIME);
      if(LED_PORT == 1) {
  b8:	82 2f       	mov	r24, r18
  ba:	90 e0       	ldi	r25, 0x00	; 0

000000bc <.L2>:
      LED_PORT <<= 1;
  bc:	2b b1       	in	r18, 0x0b	; 11

000000be <.Loc.27>:
    if(left) {
  be:	89 2b       	or	r24, r25
  c0:	61 f7       	brne	.-40     	; 0x9a <.L12>

000000c2 <.Loc.28>:
      LED_PORT >>= 1;
  c2:	26 95       	lsr	r18
  c4:	2b b9       	out	0x0b, r18	; 11

000000c6 <.LBB8>:
  c6:	2f e7       	ldi	r18, 0x7F	; 127
  c8:	36 e2       	ldi	r19, 0x26	; 38
  ca:	44 e0       	ldi	r20, 0x04	; 4

000000cc <.L1^B2>:
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	30 40       	sbci	r19, 0x00	; 0
  d0:	40 40       	sbci	r20, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <.L1^B2>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <L0^A>

000000d6 <L0^A>:
	...

000000d8 <.LBE8>:
      if(LED_PORT == 1) {
  d8:	3b b1       	in	r19, 0x0b	; 11

000000da <.Loc.41>:
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	31 30       	cpi	r19, 0x01	; 1
  de:	61 f3       	breq	.-40     	; 0xb8 <.L6>

000000e0 <.L10>:
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	ea cf       	rjmp	.-44     	; 0xb8 <.L6>

000000e4 <_exit>:
  e4:	f8 94       	cli

000000e6 <__stop_program>:
  e6:	ff cf       	rjmp	.-2      	; 0xe6 <__stop_program>
